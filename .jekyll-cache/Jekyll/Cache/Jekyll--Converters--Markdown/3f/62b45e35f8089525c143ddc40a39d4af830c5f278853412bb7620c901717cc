I")<p>A Python library for OpenShift was needed after a search came up with <a href="https://github.com/openshift/python-interface">only one</a> library that’s no longer being developed.</p>

<p>With Kubernetes and OpenShift being such similar projects. It made sense to have a universal Python library that’s able to communicate with both.</p>

<p>Taking the code from a <a href="https://github.com/projectatomic/atomicapp">previous project</a> the team at Project Atomic and I worked on, <a href="https://github.com/cdrage/kubeshift">Kubeshift</a> was created.</p>

<p>It’s super easy to use <a href="https://github.com/cdrage/kubeshift">Kubeshift</a>.</p>

<h2 id="installation">Installation</h2>

<p>Installation is done either through Git clone or Pip.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/cdrage/kubeshift <span class="o">&amp;&amp;</span> <span class="nb">cd </span>kubeshift <span class="o">&amp;&amp;</span> <span class="nb">sudo </span>make <span class="nb">install</span>
<span class="c"># or</span>
<span class="nb">sudo </span>pip <span class="nb">install </span>kubeshift
</code></pre></div></div>

<h2 id="use">Use</h2>

<p>After bringing your Kubernetes cluster / OpenShift cluster up, use one of the built-in methods to create a pod!</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">kubeshift</span>
<span class="kn">import</span> <span class="nn">getpass</span>

<span class="c1"># Example k8s object
</span><span class="n">k8s_object</span> <span class="o">=</span> <span class="p">{</span><span class="s">"apiVersion"</span><span class="p">:</span> <span class="s">"v1"</span><span class="p">,</span> <span class="s">"kind"</span><span class="p">:</span> <span class="s">"Pod"</span><span class="p">,</span> <span class="s">"metadata"</span><span class="p">:</span> <span class="p">{</span><span class="s">"labels"</span><span class="p">:</span> <span class="p">{</span><span class="s">"app"</span><span class="p">:</span> <span class="s">"hellonginx"</span><span class="p">},</span> <span class="s">"name"</span><span class="p">:</span> <span class="s">"hellonginx"</span><span class="p">},</span> <span class="s">"spec"</span><span class="p">:</span> <span class="p">{</span>
    <span class="s">"containers"</span><span class="p">:</span> <span class="p">[{</span><span class="s">"image"</span><span class="p">:</span> <span class="s">"nginx"</span><span class="p">,</span> <span class="s">"name"</span><span class="p">:</span> <span class="s">"hellonginx"</span><span class="p">,</span> <span class="s">"ports"</span><span class="p">:</span> <span class="p">[{</span><span class="s">"containerPort"</span><span class="p">:</span> <span class="mi">80</span><span class="p">,</span> <span class="s">"hostPort"</span><span class="p">:</span> <span class="mi">80</span><span class="p">,</span> <span class="s">"protocol"</span><span class="p">:</span> <span class="s">"TCP"</span><span class="p">}]}]}}</span>

<span class="c1"># Client configuration
</span><span class="n">user</span> <span class="o">=</span> <span class="n">getpass</span><span class="o">.</span><span class="n">getuser</span><span class="p">()</span>
<span class="n">config</span> <span class="o">=</span> <span class="n">kubeshift</span><span class="o">.</span><span class="n">Config</span><span class="o">.</span><span class="n">from_file</span><span class="p">(</span><span class="s">"/home/</span><span class="si">%</span><span class="s">s/.kube/config"</span> <span class="o">%</span> <span class="n">user</span><span class="p">)</span>
<span class="n">client</span> <span class="o">=</span> <span class="n">kubeshift</span><span class="o">.</span><span class="n">KubernetesClient</span><span class="p">(</span><span class="n">config</span><span class="p">)</span>
<span class="c1"># client = kubeshift.OpenshiftClient(config)
</span>
<span class="c1"># Create an object
</span><span class="n">client</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">k8s_object</span><span class="p">)</span>  <span class="c1"># Creates the k8s object
</span></code></pre></div></div>

<h2 id="main-features">Main features</h2>

<p><a href="https://github.com/cdrage/kubeshift">Kubeshift</a> excels at configuration generation. Either specifying a configuration file (ex. <code class="highlighter-rouge">/ghome/user/.kube/config</code>) or leaving it blank will generate an appropriate config in order to communicate to the cluster.</p>

<p>Every API call is implemented as a function within each provider.</p>

<p>For more information on <a href="https://github.com/cdrage/kubeshift">Kubeshift</a> as well as further documentation on each method, check out the GitHub repo.</p>
:ET